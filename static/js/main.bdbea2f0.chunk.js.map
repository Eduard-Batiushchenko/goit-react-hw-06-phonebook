{"version":3,"sources":["Components/Contacts/Contacts.module.css","Components/Filter/Filter.module.css","App.module.css","Components/Container/Container.module.css","constants/constants.js","redux/reducers/contactsReducer/itemsReducer.js","redux/reducers/contactsReducer/filterReducer.js","redux/reducers/contactsReducer/index.js","redux/reducers/rootReducer.js","redux/store.js","Components/Container/Container.js","redux/actions/contactsActions/itemsActions.js","Components/Contacts/Contacts.js","Components/ContactForm/ContactForm.js","redux/actions/contactsActions/filterActions.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","ADD_ITEM","DELETE_ITEM","RELOAD_PAGE","HANDLE_FILTER","itemsReducer","createReducer","state","payload","some","el","name","filter","id","filterReducer","contacts","combineReducers","items","rootReducer","store","configureStore","reducer","Container","children","className","style","container","addItem","createAction","data","shortid","generate","deleteItem","setByReload","Contacts","prevProps","prevState","this","props","contactsStringify","JSON","stringify","localStorage","setItem","getItem","contactsParse","parse","reloadPage","deleteContact","filterInpurt","toLowerCase","includes","list","map","item","number","type","button","onClick","Component","connect","dispatch","ContactForm","handleInput","e","currentInput","currentTarget","setState","target","value","handleSubmitInput","preventDefault","alert","addItems","reset","console","log","form","onSubmit","label","input","onChange","required","handleFilterValue","handleFilterInput","App","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdbea2f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__1kRFD\",\"item\":\"Contacts_item__3482B\",\"button\":\"Contacts_button__2aMPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__dUXnq\",\"input\":\"Filter_input__27Xzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3BA_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1luwi\"};","const ADD_ITEM = 'contacts/addItem';\r\nconst DELETE_ITEM = 'contacts/delete';\r\nconst RELOAD_PAGE = 'contacts/downloadContacts';\r\nconst HANDLE_FILTER = 'filter/changeValue';\r\n\r\nexport { ADD_ITEM, DELETE_ITEM, RELOAD_PAGE, HANDLE_FILTER };\r\n","import {\r\n  ADD_ITEM,\r\n  DELETE_ITEM,\r\n  RELOAD_PAGE,\r\n} from '../../../constants/constants';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst initialState = [];\r\n\r\n// const itemsReducer = (state = initialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case ADD_ITEM:\r\n//       return state.some(el => el.name === payload.name)\r\n//         ? state\r\n//         : (state = [...state, payload]);\r\n//     case DELETE_ITEM:\r\n//       return state.filter(el => el.id !== payload);\r\n//     case RELOAD_PAGE:\r\n//       return (state = payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst itemsReducer = createReducer(initialState, {\r\n  [ADD_ITEM]: (state, { payload }) =>\r\n    state.some(el => el.name === payload.name)\r\n      ? state\r\n      : (state = [...state, payload]),\r\n  [DELETE_ITEM]: (state, { payload }) => state.filter(el => el.id !== payload),\r\n  [RELOAD_PAGE]: (state, { payload }) => (state = payload),\r\n});\r\n\r\nexport default itemsReducer;\r\n","import { HANDLE_FILTER } from '../../../constants/constants';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nconst initialState = '';\r\n\r\n// const filterReducer = (state = initialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case HANDLE_FILTER:\r\n//       return (state = payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nconst filterReducer = createReducer(initialState, {\r\n  [HANDLE_FILTER]: (state, { payload }) => (state = payload),\r\n});\r\n\r\nexport default filterReducer;\r\n","import { combineReducers } from 'redux';\r\nimport items from './itemsReducer';\r\nimport filter from './filterReducer';\r\n\r\nconst contacts = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contacts;\r\n","import { combineReducers } from 'redux';\r\nimport contacts from './contactsReducer/index';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts,\r\n});\r\n\r\nexport default rootReducer;\r\n","// import { createStore } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport style from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={style.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport {\r\n  ADD_ITEM,\r\n  DELETE_ITEM,\r\n  RELOAD_PAGE,\r\n} from '../../../constants/constants';\r\n\r\n// const addItem = data => ({\r\n//   type: ADD_ITEM,\r\n//   payload: {\r\n//     ...data,\r\n//     id: shortid.generate(),\r\n//   },\r\n// });\r\n\r\n// const deleteItem = id => ({\r\n//   type: DELETE_ITEM,\r\n//   payload: id,\r\n// });\r\n\r\n// const setByReload = value => ({\r\n//   type: RELOAD_PAGE,\r\n//   payload: value,\r\n// });\r\nconst payloadAddItem = data => ({\r\n  payload: {\r\n    ...data,\r\n    id: shortid.generate(),\r\n  },\r\n});\r\nconst addItem = createAction(ADD_ITEM, payloadAddItem);\r\nconst deleteItem = createAction(DELETE_ITEM);\r\nconst setByReload = createAction(RELOAD_PAGE);\r\n\r\nexport { addItem, deleteItem, setByReload };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  deleteItem,\r\n  setByReload,\r\n} from '../../redux/actions/contactsActions/itemsActions';\r\nimport style from './Contacts.module.css';\r\n\r\nclass Contacts extends Component {\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { items } = this.props;\r\n    if (prevProps.contacts !== items) {\r\n      const contactsStringify = JSON.stringify(items);\r\n      localStorage.setItem('contacts', contactsStringify);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const contactsStringify = localStorage.getItem('contacts');\r\n    if (contactsStringify) {\r\n      const contactsParse = JSON.parse(contactsStringify);\r\n      this.props.reloadPage(contactsParse);\r\n    }\r\n  }\r\n  render() {\r\n    const { items, deleteContact, filter } = this.props;\r\n    const filterInpurt = items.filter(el =>\r\n      el.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n    return (\r\n      <ul className={style.list}>\r\n        {filterInpurt.map(el => {\r\n          return (\r\n            <li key={el.id} className={style.item}>\r\n              {el.name}: {el.number}\r\n              <button\r\n                type=\"button\"\r\n                className={style.button}\r\n                onClick={() => deleteContact(el.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContacts.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  items: state.contacts.items,\r\n  filter: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(deleteItem(id)),\r\n  reloadPage: data => dispatch(setByReload(data)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../../redux/actions/contactsActions/itemsActions';\r\nimport PropTypes from 'prop-types';\r\nimport style from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInput = e => {\r\n    const currentInput = e.currentTarget.name;\r\n    this.setState({ [currentInput]: e.target.value });\r\n  };\r\n\r\n  handleSubmitInput = e => {\r\n    e.preventDefault();\r\n    const result = this.props.items.some(\r\n      el => el.name.toLowerCase() === this.state.name.toLowerCase(),\r\n    );\r\n    !result\r\n      ? this.props.addItems(this.state)\r\n      : alert(`${this.state.name} contact already exist`);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    console.log(this.props.items);\r\n    return (\r\n      <form className={style.form} onSubmit={this.handleSubmitInput}>\r\n        <label className={style.label}>\r\n          {' '}\r\n          Name\r\n          <input\r\n            className={style.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleInput}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={style.label}>\r\n          Number\r\n          <input\r\n            className={style.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleInput}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={style.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addItems: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItems: data => dispatch(addItem(data)),\r\n});\r\nconst mapStateToProps = state => ({\r\n  items: state.contacts.items,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { HANDLE_FILTER } from '../../../constants/constants';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n// const handleFilterValue = value => ({\r\n//   type: HANDLE_FILTER,\r\n//   payload: value,\r\n// });\r\nconst handleFilterValue = createAction(HANDLE_FILTER);\r\n\r\nexport { handleFilterValue };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { handleFilterValue } from '../../redux/actions/contactsActions/filterActions';\r\nimport style from './Filter.module.css';\r\n\r\nconst Filter = ({ handleFilterInput }) => {\r\n  return (\r\n    <label className={style.label}>\r\n      Find contacts by name{' '}\r\n      <input\r\n        className={style.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={e => {\r\n          handleFilterInput(e.currentTarget.value);\r\n        }}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  handleFilterInput: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleFilterInput: value => dispatch(handleFilterValue(value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\nimport Container from './Components/Container/Container';\nimport Contacts from './Components/Contacts/Contacts';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport style from './App.module.css';\n\nclass App extends Component {\n  // state = {\n  //   filter: '',\n  // };\n\n  // handleFilterInput = filterValue => {\n  //   this.setState({ filter: filterValue });\n  // };\n\n  render() {\n    return (\n      <Container>\n        <h1 className={style.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={style.title}>Contacts:</h2>\n        <Filter />\n        <Contacts />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__FK-hd\",\"label\":\"ContactForm_label__3R3zK\",\"input\":\"ContactForm_input__3yZX4\",\"button\":\"ContactForm_button___M1UX\"};"],"sourceRoot":""}